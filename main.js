(()=>{"use strict";var e,t,s,n,r={497:(e,t,s)=>{s.a(e,(async(e,t)=>{try{var n=s(930),r=e([n]);n=(r.then?(await r)():r)[0],t()}catch(e){t(e)}}))},784:(e,t,s)=>{s.d(t,{x:()=>o});class n{constructor(){this.element=null,this.title="Логи",this.contentBox=null}render(){this.element=document.createElement("div"),this.element.className="box log-box";const e=`\n        <div class="header-box">${this.title}:</div>\n        <div class="content-box"></div>`;this.element.insertAdjacentHTML("beforeend",e),this.contentBox=this.element.querySelector(".content-box")}createLogHTML(e,t,s){const n=new Date(e);return`\n        <div class="log-item">\n            <div class="log-date">${n.toLocaleTimeString()+" "+n.toLocaleDateString()}</div>\n            <div class="log-server-id">Server: <span>${t}</span></div>\n            <div class="log-info">INFO: <span>${s}</span></div>\n        </div>`}addLog(e){const t=this.createLogHTML(e.timeStamp,e.id,e.info);this.contentBox.insertAdjacentHTML("beforeend",t),this.contentBox.scrollTop=this.contentBox.scrollHeight}}class r{constructor(e,t,s){this.element=null,this.socket=s,this.id=e,this.status=t,this.statusRound=null,this.statusText=null,this.btnChange=null,this.btnDelete=null,this.onChangeStatusEl=this.onChangeStatus.bind(this),this.onDeleteEl=this.onDelete.bind(this),this.render(),this.listener()}render(){this.element=document.createElement("div"),this.element.className="server-item";const e=`<div class="item-id" data-id="${this.id}">${this.id}</div>\n                <div class="item-statuses">\n                    <div class="status-title">Status:</div>\n                    <div class="status-round ${this.status}"></div>\n                    <div class="status-text">${this.status}</div>\n                </div>\n                <div class="item-ations">\n                    <div class="action-title">Actions:</div>\n                    <div class="action-btn">\n                        <span class="material-symbols-outlined btn-actions">\n                            ${"running"===this.status?"pause":"play_arrow"}\n                        </span>\n                        <span class="material-symbols-outlined btn-actions">\n                            close\n                        </span>\n                    </div>\n                </div>\n        `;this.element.insertAdjacentHTML("beforeend",e),this.statusRound=this.element.querySelector(".status-round"),this.statusText=this.element.querySelector(".status-text");const t=this.element.querySelectorAll(".btn-actions");this.btnChange=t[0],this.btnDelete=t[1]}listener(){this.btnChange.addEventListener("click",this.onChangeStatusEl),this.btnDelete.addEventListener("click",this.onDeleteEl)}onChangeStatus(){this.socket.send(JSON.stringify({id:this.id}))}changeStatus(e){this.status=e,this.statusRound.className=`status-round ${e}`,this.statusText.textContent=e;const t="running"===e?"pause":"play_arrow";this.btnChange.textContent=t}async onDelete(){(await fetch("https://control-servers.onrender.com/"+this.id,{method:"DELETE"})).ok&&(console.log("Запрос на удаление сервера успешно отправлен"),this.btnChange=removeEventListener("click",this.onChangeStatusEl),this.btnDelete=removeEventListener("click",this.onDeleteEl))}}class i{constructor(e){this.element=null,this.title="Сервера:",this.createServerBtn=null,this.listServersElement=null,this.serversArr=[],this.socket=e}render(){this.element=document.createElement("div"),this.element.className="box servers-box";const e=`\n            <div class="header-box">${this.title}</div>\n            <div class="content-box">\n                <div class="servers-list"></div>\n                <div class="server-add">Создать сервер</div>\n            </div>`;this.element.insertAdjacentHTML("beforeend",e),this.createServerBtn=this.element.querySelector(".server-add"),this.listServersElement=this.element.querySelector(".servers-list")}listener(){this.createServerBtn.addEventListener("click",this.onCreateServer.bind(this))}async getServer(){const e=await fetch("https://control-servers.onrender.com");let t="";if(e.ok)for await(const s of e.body)t+=(new TextDecoder).decode(s);const s=JSON.parse(t).data;if(s.length)for(const e of s)this.createServer(e.id,e.state)}async onCreateServer(){(await fetch("https://control-servers.onrender.com",{method:"POST"})).ok&&console.log("Запрос на подключение сервера успешно отправлен")}createServer(e,t){const s=new r(e,t,this.socket);this.listServersElement.append(s.element),this.serversArr.push(s),this.listServersElement.scrollTop=this.listServersElement.scrollHeight}changeStatusServer(e,t){const s=this.serversArr.find((t=>t.id===e));s&&s.changeStatus(t)}deleteServer(e){let t=this.serversArr.find((t=>t.id===e));t.element.remove(),this.serversArr=this.serversArr.filter((e=>e!==t)),t=null}}class o{constructor(e){this.container=e,this.socket=null}initialBox(){this.serverBox=new i(this.socket),this.logBox=new n}renders(){this.serverBox.render(),this.container.append(this.serverBox.element),this.serverBox.listener(),this.serverBox.getServer(),this.logBox.render(),this.container.append(this.logBox.element)}connections(){new EventSource("https://control-servers.onrender.com/sse").addEventListener("message",this.eventSEEMsg.bind(this)),this.socket=new WebSocket("wss://control-servers.onrender.com"),this.socket.addEventListener("message",this.eventSocketMsg.bind(this)),this.socket.addEventListener("open",(e=>{console.log(e)})),this.socket.addEventListener("close",(e=>{console.log(e)}))}eventSEEMsg(e){const t=JSON.parse(e.data);"Create command"===t.info&&this.serverBox.createServer(t.id,"creating"),"Created"===t.info&&this.serverBox.changeStatusServer(t.id,"stopped"),"Removed"===t.info&&this.serverBox.deleteServer(t.id),this.logBox.addLog(t)}eventSocketMsg(e){const t=JSON.parse(e.data);if(Array.isArray(t)){if(t.length)for(const e of t)this.serverBox.changeStatusServer(e.id,e.state)}else console.log("Socket",t)}}},930:(e,t,s)=>{s.a(e,(async(e,t)=>{try{var n=s(784);console.log("inretface start"),console.log("production");if((await fetch("https://control-servers.onrender.com/ping")).ok){console.log("backend starting");const e=document.querySelector(".container"),t=new n.x(e);t.connections(),t.initialBox(),t.renders()}t()}catch(e){t(e)}}),1)}},i={};function o(e){var t=i[e];if(void 0!==t)return t.exports;var s=i[e]={exports:{}};return r[e](s,s.exports,o),s.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",s="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",n=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},o.a=(r,i,o)=>{var a;o&&((a=[]).d=-1);var l,c,h,d=new Set,v=r.exports,u=new Promise(((e,t)=>{h=t,c=e}));u[t]=v,u[e]=e=>(a&&e(a),d.forEach(e),u.catch((e=>{}))),r.exports=u,i((r=>{var i;l=(r=>r.map((r=>{if(null!==r&&"object"==typeof r){if(r[e])return r;if(r.then){var i=[];i.d=0,r.then((e=>{o[t]=e,n(i)}),(e=>{o[s]=e,n(i)}));var o={};return o[e]=e=>e(i),o}}var a={};return a[e]=e=>{},a[t]=r,a})))(r);var o=()=>l.map((e=>{if(e[s])throw e[s];return e[t]})),c=new Promise((t=>{(i=()=>t(o)).r=0;var s=e=>e!==a&&!d.has(e)&&(d.add(e),e&&!e.d&&(i.r++,e.push(i)));l.map((t=>t[e](s)))}));return i.r?c:o()}),(e=>(e?h(u[s]=e):c(v),n(a)))),a&&a.d<0&&(a.d=0)},o.d=(e,t)=>{for(var s in t)o.o(t,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);o(497)})();